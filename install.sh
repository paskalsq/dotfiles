#!/usr/bin/env bash


set -e

BLUE='\033[0;34m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

USERNAME=""

info() { printf "\n${BLUE}:: %s${NC}\n" "$1"; }
success() { printf "${GREEN}‚úî %s${NC}\n" "$1"; }
error() { printf "${RED}‚úñ %s${NC}\n" "$1"; }

get_username() {
    read -p "Type in your username: " -r USERNAME
    if [ -z "$USERNAME" ]; then
        error "Username cannot be empty"
        exit 1
    fi
    info "Script will be running for: $USERNAME"
}

bootstrap_system() {
    info "System update and doas installation..."
    sudo reflector --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
    sudo pacman -Syu --noconfirm --needed opendoas
    success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞, doas —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
}

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ doas
configure_doas() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ doas..."
    local doas_conf_line="permit persist ${USERNAME} as root"
    
    if ! sudo grep -qF "$doas_conf_line" /etc/doas.conf &>/dev/null; then
        echo "$doas_conf_line" | sudo tee /etc/doas.conf > /dev/null
       sudo chown -c root:root /etc/doas.conf
       sudo chmod -c 0400 /etc/doas.conf
        success "–ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ /etc/doas.conf."
    else
        success "–ü—Ä–∞–≤–∏–ª–æ –¥–ª—è doas —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    fi
}

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
install_pacman_packages() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤..."
    
    local packages=(
        alsa-tools alsa-utils bat cups dnsmasq downgrade dua-cli dust eza fd fzf
        gparted gvfs gvfs-gphoto2 gvfs-mtp gvfs-nfs htop libappindicator-gtk3
        libguestfs man-db mpc mpd ncmpcpp netstat-nat npm obfs4proxy obs-studio
        openbsd-netcat python-eyed3 qemu-full qt5-wayland reflector ripgrep sof-firmware
        steam stow thunar tor torbrowser-launcher traceroute tree unrar unzip
        veracrypt virt-manager virt-viewer xdg-desktop-portal-hyprland xorg-xhost
        zoxide nvidia-dkms nvidia-utils lib32-nvidia-utils egl-wayland hyprland
        swww ly neovim vim git wget base-devel pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber
        gst-plugin-pipewire lib32-pipewire lib32-pipewire-jack)

    doas pacman -S --noconfirm --needed "${packages[@]}"
    success "–í—Å–µ –ø–∞–∫–µ—Ç—ã –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
}

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AUR-—Ö–µ–ª–ø–µ—Ä–∞ (paru)
install_paru() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ AUR-—Ö–µ–ª–ø–µ—Ä–∞ (paru)..."
    if ! command -v paru &> /dev/null; then
        info "paru –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        git clone https://aur.archlinux.org/packages/paru /tmp/paru
        (cd /tmp/paru && makepkg -si --noconfirm)
        rm -rf /tmp/paru
        success "paru —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    else
        info "paru —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

# 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
configure_system_files() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

    if [ -f /etc/paru.conf ]; then
        if ! grep -q "Sudo = doas" /etc/paru.conf; then
            doas sed -i '/\[bin\]/a Sudo = doas' /etc/paru.conf
            success "Paru –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ doas."
        fi
    else
        printf "[bin]\nSudo = doas\n" | doas tee /etc/paru.conf > /dev/null
        success "–°–æ–∑–¥–∞–Ω /etc/paru.conf –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ doas."
    fi

    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ NVIDIA..."
    local nvidia_conf_content="options nvidia_drm modeset=1"
    echo "$nvidia_conf_content" | doas tee /etc/modprobe.d/nvidia.conf > /dev/null
    success "–°–æ–∑–¥–∞–Ω /etc/modprobe.d/nvidia.conf."

    info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π NVIDIA –≤ mkinitcpio..."
    doas sed -i 's/^MODULES=.*/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)/' /etc/mkinitcpio.conf
    success "–ú–æ–¥—É–ª–∏ NVIDIA –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ /etc/mkinitcpio.conf."
    
    info "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ initramfs (mkinitcpio)..."
    doas mkinitcpio -P
    success "Initramfs —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω."
}

install_aur_packages() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ AUR..."
    local packages=(
        "librewolf-bin"
        "waybar-git" 
        "localsend-bin"
        "nekoray-bin"
    )

    paru -S --noconfirm --needed "${packages[@]}"
    success "–í—Å–µ –ø–∞–∫–µ—Ç—ã –∏–∑ AUR —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
}

enable_services() {
    info "–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

    info "–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ PipeWire..."
    systemctl --user enable pipewire.service
    systemctl --user enable pipewire-pulse.service
    systemctl --user enable wireplumber.service
    success "–°–µ—Ä–≤–∏—Å—ã PipeWire –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USERNAME."

    info "–ê–∫—Ç–∏–≤–∞—Ü–∏—è Ly Display Manager..."
    doas systemctl enable ly.service
    success "–°–µ—Ä–≤–∏—Å Ly Display Manager –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω."
}



# 7. –°–º–µ–Ω–∞ –æ–±–æ–ª–æ—á–∫–∏ –Ω–∞ Zsh
setup_zsh() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Zsh –∫–∞–∫ –æ–±–æ–ª–æ—á–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
    if [[ "$SHELL" != "/bin/zsh" ]]; then
        doas chsh -s "$(which zsh)" "$USERNAME"
        success "–û–±–æ–ª–æ—á–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è $USERNAME –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ Zsh."
    else
        info "Zsh —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±–æ–ª–æ—á–∫–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
    fi
}

apply_dotfiles() {
    info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (dotfiles) —Å –ø–æ–º–æ—â—å—é stow..."
    cd "$(dirname "$0")"
    stow --target="$HOME" --restow */
    success "Dotfiles —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã."
}

main() {
    read -p "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç —Å–∏—Å—Ç–µ–º—É. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi

    get_username
    bootstrap_system
    configure_doas
    
    install_pacman_packages
    configure_system_files     
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ paru
    install_paru
    install_aur_packages
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    setup_zsh
    apply_dotfiles
    enable_services
    echo
    success "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
    info "–ö–†–ê–ô–ù–ï –í–ê–ñ–ù–û: –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å –¥—Ä–∞–π–≤–µ—Ä—ã NVIDIA –∏ –¥—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è."
}

main
